Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> input
Rule 1     input -> instruction
Rule 2     instruction -> add_inst
Rule 3     instruction -> query_inst
Rule 4     instruction -> add_tags_inst
Rule 5     instruction -> delete_tags_inst
Rule 6     add_inst -> ADD F file_list T tag_list
Rule 7     query_inst -> inst Q tag_query
Rule 8     add_tags_inst -> ADD_TAGS Q tag_query T tag_list
Rule 9     delete_tags_inst -> DELETE_TAGS Q tag_query T tag_list
Rule 10    inst -> DELETE
Rule 11    inst -> LIST
Rule 12    inst -> GET
Rule 13    file_list -> FILENAME
Rule 14    file_list -> FILENAME file_list
Rule 15    tag_list -> WORD
Rule 16    tag_list -> WORD tag_list
Rule 17    tag_query -> WORD
Rule 18    tag_query -> WORD tag_query

Terminals, with rules where they appear

ADD                  : 6
ADD_TAGS             : 8
DELETE               : 10
DELETE_TAGS          : 9
F                    : 6
FILENAME             : 13 14
GET                  : 12
LIST                 : 11
Q                    : 7 8 9
T                    : 6 8 9
WORD                 : 15 16 17 18
error                : 

Nonterminals, with rules where they appear

add_inst             : 2
add_tags_inst        : 4
delete_tags_inst     : 5
file_list            : 6 14
input                : 0
inst                 : 7
instruction          : 1
query_inst           : 3
tag_list             : 6 8 9 16
tag_query            : 7 8 9 18

Parsing method: LALR

state 0

    (0) S' -> . input
    (1) input -> . instruction
    (2) instruction -> . add_inst
    (3) instruction -> . query_inst
    (4) instruction -> . add_tags_inst
    (5) instruction -> . delete_tags_inst
    (6) add_inst -> . ADD F file_list T tag_list
    (7) query_inst -> . inst Q tag_query
    (8) add_tags_inst -> . ADD_TAGS Q tag_query T tag_list
    (9) delete_tags_inst -> . DELETE_TAGS Q tag_query T tag_list
    (10) inst -> . DELETE
    (11) inst -> . LIST
    (12) inst -> . GET

    ADD             shift and go to state 7
    ADD_TAGS        shift and go to state 9
    DELETE_TAGS     shift and go to state 10
    DELETE          shift and go to state 11
    LIST            shift and go to state 12
    GET             shift and go to state 13

    input                          shift and go to state 1
    instruction                    shift and go to state 2
    add_inst                       shift and go to state 3
    query_inst                     shift and go to state 4
    add_tags_inst                  shift and go to state 5
    delete_tags_inst               shift and go to state 6
    inst                           shift and go to state 8

state 1

    (0) S' -> input .



state 2

    (1) input -> instruction .

    $end            reduce using rule 1 (input -> instruction .)


state 3

    (2) instruction -> add_inst .

    $end            reduce using rule 2 (instruction -> add_inst .)


state 4

    (3) instruction -> query_inst .

    $end            reduce using rule 3 (instruction -> query_inst .)


state 5

    (4) instruction -> add_tags_inst .

    $end            reduce using rule 4 (instruction -> add_tags_inst .)


state 6

    (5) instruction -> delete_tags_inst .

    $end            reduce using rule 5 (instruction -> delete_tags_inst .)


state 7

    (6) add_inst -> ADD . F file_list T tag_list

    F               shift and go to state 14


state 8

    (7) query_inst -> inst . Q tag_query

    Q               shift and go to state 15


state 9

    (8) add_tags_inst -> ADD_TAGS . Q tag_query T tag_list

    Q               shift and go to state 16


state 10

    (9) delete_tags_inst -> DELETE_TAGS . Q tag_query T tag_list

    Q               shift and go to state 17


state 11

    (10) inst -> DELETE .

    Q               reduce using rule 10 (inst -> DELETE .)


state 12

    (11) inst -> LIST .

    Q               reduce using rule 11 (inst -> LIST .)


state 13

    (12) inst -> GET .

    Q               reduce using rule 12 (inst -> GET .)


state 14

    (6) add_inst -> ADD F . file_list T tag_list
    (13) file_list -> . FILENAME
    (14) file_list -> . FILENAME file_list

    FILENAME        shift and go to state 19

    file_list                      shift and go to state 18

state 15

    (7) query_inst -> inst Q . tag_query
    (17) tag_query -> . WORD
    (18) tag_query -> . WORD tag_query

    WORD            shift and go to state 21

    tag_query                      shift and go to state 20

state 16

    (8) add_tags_inst -> ADD_TAGS Q . tag_query T tag_list
    (17) tag_query -> . WORD
    (18) tag_query -> . WORD tag_query

    WORD            shift and go to state 21

    tag_query                      shift and go to state 22

state 17

    (9) delete_tags_inst -> DELETE_TAGS Q . tag_query T tag_list
    (17) tag_query -> . WORD
    (18) tag_query -> . WORD tag_query

    WORD            shift and go to state 21

    tag_query                      shift and go to state 23

state 18

    (6) add_inst -> ADD F file_list . T tag_list

    T               shift and go to state 24


state 19

    (13) file_list -> FILENAME .
    (14) file_list -> FILENAME . file_list
    (13) file_list -> . FILENAME
    (14) file_list -> . FILENAME file_list

    T               reduce using rule 13 (file_list -> FILENAME .)
    FILENAME        shift and go to state 19

    file_list                      shift and go to state 25

state 20

    (7) query_inst -> inst Q tag_query .

    $end            reduce using rule 7 (query_inst -> inst Q tag_query .)


state 21

    (17) tag_query -> WORD .
    (18) tag_query -> WORD . tag_query
    (17) tag_query -> . WORD
    (18) tag_query -> . WORD tag_query

    $end            reduce using rule 17 (tag_query -> WORD .)
    T               reduce using rule 17 (tag_query -> WORD .)
    WORD            shift and go to state 21

    tag_query                      shift and go to state 26

state 22

    (8) add_tags_inst -> ADD_TAGS Q tag_query . T tag_list

    T               shift and go to state 27


state 23

    (9) delete_tags_inst -> DELETE_TAGS Q tag_query . T tag_list

    T               shift and go to state 28


state 24

    (6) add_inst -> ADD F file_list T . tag_list
    (15) tag_list -> . WORD
    (16) tag_list -> . WORD tag_list

    WORD            shift and go to state 30

    tag_list                       shift and go to state 29

state 25

    (14) file_list -> FILENAME file_list .

    T               reduce using rule 14 (file_list -> FILENAME file_list .)


state 26

    (18) tag_query -> WORD tag_query .

    $end            reduce using rule 18 (tag_query -> WORD tag_query .)
    T               reduce using rule 18 (tag_query -> WORD tag_query .)


state 27

    (8) add_tags_inst -> ADD_TAGS Q tag_query T . tag_list
    (15) tag_list -> . WORD
    (16) tag_list -> . WORD tag_list

    WORD            shift and go to state 30

    tag_list                       shift and go to state 31

state 28

    (9) delete_tags_inst -> DELETE_TAGS Q tag_query T . tag_list
    (15) tag_list -> . WORD
    (16) tag_list -> . WORD tag_list

    WORD            shift and go to state 30

    tag_list                       shift and go to state 32

state 29

    (6) add_inst -> ADD F file_list T tag_list .

    $end            reduce using rule 6 (add_inst -> ADD F file_list T tag_list .)


state 30

    (15) tag_list -> WORD .
    (16) tag_list -> WORD . tag_list
    (15) tag_list -> . WORD
    (16) tag_list -> . WORD tag_list

    $end            reduce using rule 15 (tag_list -> WORD .)
    WORD            shift and go to state 30

    tag_list                       shift and go to state 33

state 31

    (8) add_tags_inst -> ADD_TAGS Q tag_query T tag_list .

    $end            reduce using rule 8 (add_tags_inst -> ADD_TAGS Q tag_query T tag_list .)


state 32

    (9) delete_tags_inst -> DELETE_TAGS Q tag_query T tag_list .

    $end            reduce using rule 9 (delete_tags_inst -> DELETE_TAGS Q tag_query T tag_list .)


state 33

    (16) tag_list -> WORD tag_list .

    $end            reduce using rule 16 (tag_list -> WORD tag_list .)

